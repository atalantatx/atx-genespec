)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="ATXN3"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="TARDBP"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="MS4A6A"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="MS4A6A"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe + G14_as_seq,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="HTT"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe + G14_as_seq,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="PRNP"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe + G14_as_seq,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_target="MAPT"
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=sel_target)
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe + G14_as_seq,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
sel_targets=c("MAPT","SNCA")
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_targets=c("MAPT","SNCA")
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=list("$in":=sel_targets))
library(tidyverse)
library(data.table)
library(arrow)
library(ggpubr)
library(purrr)
library(naturalsort)
library(mongolite)
library(dotenv)
library("combinat")
library(mgcv)
library("parallel")
sel_targets=c("MAPT","SNCA")
dir.create(file.path("plots",sel_target),showWarnings = F,recursive = T)
dataset = fread("../dataset/All_data_2023-09-22/All_data_2023-09-22_scaled.csv",sep = ",") %>%
mutate(
Gene=gsub("PRNP.*","PRNP",Gene),
Oligo_ID=gsub("PRNP-Human|PRNP-Mouse","PRNP",Oligo_ID)
)
dataset$Gene %>% table()
load_dot_env("~/.envs/mongodb.env")
mongo_url = Sys.getenv("MONGODB_URL")
sirna_features2 = mongolite::mongo(
collection = "sirna_features2",
db = "disirna",
url = mongo_url,
verbose = T
)
query = list(Gene=list("$in"=sel_targets))
system.time({
it = sirna_features2$iterate(
query=jsonlite::toJSON(query,auto_unbox = T),
fields = jsonlite::toJSON(list(GeneRegex=0),auto_unbox = T)
)
target_batch = it$batch(size = 100000)
target_data = target_batch %>% rbindlist(fill = T)
})
dataset_feature = merge(dataset,target_data,by = c("Oligo_ID","Gene"))
dataset_feature %>% dim()
sel_var = c(value="C18_as_seq")
sel_col = c("exp_highdose",sel_var)
data_test = dataset_feature %>%
select(any_of(sel_col)) #%>%
# rename(all_of(sel_var))
wc_out = wilcox.test(
formula=exp_highdose ~ value,
data=data_test,
alternative="greater"
)
# wc_out
lm_out = lm(
formula=exp_highdose ~ ass_ass_mfe + duplex_mfe+ ss_ss_mfe + ss_mfe + ass_mfe + G14_as_seq,
data=dataset_feature
)
summary(lm_out)
plot(lm_out)
lm_out$model
lm_out$coefficients
lm_out$effects
lm_out$fitted.values
predict(dataset_feature)
predict(lm_out,dataset_feature)
plot(
y=predict(lm_out,dataset_feature),
x=dataset_feature$exp_highdose
)
plot(lm_out)
plot(
y=predict(lm_out,dataset_feature),
x=dataset_feature$exp_highdose
)
cor(
predict(lm_out,dataset_feature),
dataset_feature$exp_highdose,
method = "spearman"
)
plot(lm_out)
plot(
y=predict(lm_out,dataset_feature),
x=dataset_feature$exp_highdose
)
cor(
predict(lm_out,dataset_feature),
dataset_feature$exp_highdose,
method = "spearman"
)
hist(dataset_feature$exp_highdose)
cor(
predict(lm_out,dataset_feature),
dataset_feature$exp_highdose,
method = "spearman"
)
plot(
y=predict(lm_out,dataset_feature),
x=dataset_feature$exp_highdose
)
